{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\ReactJS_SM_WebApp_Admin\\\\helpers\\\\myChart.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, LineSeries, Title, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\nimport { curveCatmullRom, line } from 'd3-shape';\nimport { scalePoint } from 'd3-scale'; // import { energyConsumption as data } from '../../../demo-data/data-vizualization';\n\nconst Line = props => /*#__PURE__*/_jsxDEV(LineSeries.Path, _objectSpread(_objectSpread({}, props), {}, {\n  path: line().x(({\n    arg\n  }) => arg).y(({\n    val\n  }) => val).curve(curveCatmullRom)\n}), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 5\n}, this);\n\nconst titleStyles = {\n  title: {\n    textAlign: 'center',\n    width: '100%',\n    marginBottom: '10px'\n  }\n};\nconst Text = withStyles(titleStyles)(props => {\n  const {\n    text,\n    classes\n  } = props;\n  const [mainText, subText] = text.split('\\\\n');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.title,\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h3\",\n      variant: \"h5\",\n      children: \"Leads for the past 7 days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n});\n\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row'\n  }\n});\n\nconst legendLabelStyles = theme => ({\n  label: {\n    marginBottom: theme.spacing(1),\n    whiteSpace: 'nowrap'\n  }\n});\n\nconst legendItemStyles = () => ({\n  item: {\n    flexDirection: 'column-reverse'\n  }\n});\n\nconst legendRootBase = (_ref) => {\n  let {\n    classes\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"classes\"]);\n\n  return /*#__PURE__*/_jsxDEV(Legend.Root, _objectSpread(_objectSpread({}, restProps), {}, {\n    className: classes.root\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nconst legendLabelBase = (_ref2) => {\n  let {\n    classes\n  } = _ref2,\n      restProps = _objectWithoutProperties(_ref2, [\"classes\"]);\n\n  return /*#__PURE__*/_jsxDEV(Legend.Label, _objectSpread({\n    className: classes.label\n  }, restProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\nconst legendItemBase = (_ref3) => {\n  let {\n    classes\n  } = _ref3,\n      restProps = _objectWithoutProperties(_ref3, [\"classes\"]);\n\n  return /*#__PURE__*/_jsxDEV(Legend.Item, _objectSpread({\n    className: classes.item\n  }, restProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\nconst Root = withStyles(legendStyles, {\n  name: 'LegendRoot'\n})(legendRootBase);\nconst Label = withStyles(legendLabelStyles, {\n  name: 'LegendLabel'\n})(legendLabelBase);\nconst Item = withStyles(legendItemStyles, {\n  name: 'LegendItem'\n})(legendItemBase);\n\nconst demoStyles = () => ({\n  chart: {\n    paddingRight: '30px'\n  }\n});\n\nclass MyChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    console.log(props.data);\n    this.state = {\n      data: props.data\n    };\n  }\n\n  render() {\n    // const { data: chartData } = this.state;\n    const {\n      classes,\n      data: chartData,\n      clr\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        backgroundColor: \"rgba(255, 255, 255, 0)\",\n        color: clr\n      },\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: chartData,\n        className: classes.chart,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentScale, {\n          factory: scalePoint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ArgumentAxis, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(Label, {\n            staggeringSpacing: 10,\n            displayMode: \"stagger\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          name: \"Wins\",\n          valueField: \"wins\",\n          argumentField: \"date\",\n          seriesComponent: Line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          name: \"Loss\",\n          valueField: \"loss\",\n          argumentField: \"date\",\n          seriesComponent: Line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          name: \"New\",\n          valueField: \"new\",\n          argumentField: \"date\",\n          seriesComponent: Line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          position: \"bottom\",\n          rootComponent: Root,\n          itemComponent: Item,\n          labelComponent: Label,\n          color: \"#fff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: \"Leads in the last 7 days\",\n          textComponent: Text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withStyles(demoStyles, {\n  name: 'Demo'\n})(MyChart);","map":{"version":3,"sources":["D:/project/ReactJS_SM_WebApp_Admin/helpers/myChart.js"],"names":["React","Paper","Chart","ArgumentAxis","ValueAxis","LineSeries","Title","Legend","withStyles","Typography","ArgumentScale","Animation","curveCatmullRom","line","scalePoint","Line","props","x","arg","y","val","curve","titleStyles","title","textAlign","width","marginBottom","Text","text","classes","mainText","subText","split","legendStyles","root","display","margin","flexDirection","legendLabelStyles","theme","label","spacing","whiteSpace","legendItemStyles","item","legendRootBase","restProps","legendLabelBase","legendItemBase","Root","name","Label","Item","demoStyles","chart","paddingRight","MyChart","PureComponent","constructor","console","log","data","state","render","chartData","clr","backgroundColor","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    LineSeries,\r\n    Title,\r\n    Legend,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\r\nimport {\r\n    curveCatmullRom,\r\n    line,\r\n} from 'd3-shape';\r\nimport { scalePoint } from 'd3-scale';\r\n\r\n// import { energyConsumption as data } from '../../../demo-data/data-vizualization';\r\n\r\nconst Line = props => (\r\n    <LineSeries.Path\r\n        {...props}\r\n        path={line()\r\n            .x(({ arg }) => arg)\r\n            .y(({ val }) => val)\r\n            .curve(curveCatmullRom)}\r\n    />\r\n);\r\n\r\nconst titleStyles = {\r\n    title: {\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        marginBottom: '10px',\r\n    },\r\n};\r\nconst Text = withStyles(titleStyles)((props) => {\r\n    const { text, classes } = props;\r\n    const [mainText, subText] = text.split('\\\\n');\r\n    return (\r\n        <div className={classes.title}>\r\n            <Typography component=\"h3\" variant=\"h5\">\r\n                Leads for the past 7 days\r\n            </Typography>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst legendStyles = () => ({\r\n    root: {\r\n        display: 'flex',\r\n        margin: 'auto',\r\n        flexDirection: 'row',\r\n    },\r\n});\r\nconst legendLabelStyles = theme => ({\r\n    label: {\r\n        marginBottom: theme.spacing(1),\r\n        whiteSpace: 'nowrap',\r\n    },\r\n});\r\nconst legendItemStyles = () => ({\r\n    item: {\r\n        flexDirection: 'column-reverse',\r\n    },\r\n});\r\n\r\nconst legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n);\r\nconst legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n);\r\nconst legendItemBase = ({ classes, ...restProps }) => (\r\n    <Legend.Item className={classes.item} {...restProps} />\r\n);\r\nconst Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\nconst Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\nconst Item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\r\nconst demoStyles = () => ({\r\n    chart: {\r\n        paddingRight: '30px',\r\n    },\r\n});\r\n\r\nclass MyChart extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props.data);\r\n\r\n        this.state = {\r\n            data: props.data,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        // const { data: chartData } = this.state;\r\n        const { classes, data: chartData ,clr } = this.props;\r\n\r\n        return (\r\n            <Paper\r\n                style={{backgroundColor:\"rgba(255, 255, 255, 0)\", color:clr}}>\r\n                <Chart\r\n                    data={chartData}\r\n                    className={classes.chart}\r\n                >\r\n                    <ArgumentScale factory={scalePoint}/>\r\n                    {/*<ArgumentAxis color={\"#fff\"}/>*/}\r\n                    <ArgumentAxis> {/* or ValueAxis, or CommonAxisSettings */}\r\n                        <Label\r\n                            staggeringSpacing={10}\r\n                            displayMode=\"stagger\"\r\n                        />\r\n                    </ArgumentAxis>\r\n                    <ValueAxis />\r\n\r\n                    <LineSeries\r\n                        name=\"Wins\"\r\n                        valueField=\"wins\"\r\n                        argumentField=\"date\"\r\n                        seriesComponent={Line}\r\n\r\n                    />\r\n                    <LineSeries\r\n                        name=\"Loss\"\r\n                        valueField=\"loss\"\r\n                        argumentField=\"date\"\r\n                        seriesComponent={Line}\r\n                    />\r\n                    <LineSeries\r\n                        name=\"New\"\r\n                        valueField=\"new\"\r\n                        argumentField=\"date\"\r\n                        seriesComponent={Line}\r\n                    />\r\n                    <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} color={\"#fff\"}/>\r\n                    <Title\r\n                        text=\"Leads in the last 7 days\"\r\n                        textComponent={Text}\r\n                    />\r\n                    <Animation />\r\n                </Chart>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(demoStyles, { name: 'Demo' })(MyChart);\r\n"]},"metadata":{},"sourceType":"module"}