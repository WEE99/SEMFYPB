{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\ReactJSWEB\\\\pages\\\\history.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport AdminLayout from \"../components/AdminLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { MyModal, MySnackBar, MyTable, Userinfo } from \"../helpers/mainHelpers\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport { auth, db, firebase } from \"../helpers/firebase\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nexport default function History() {\n  const router = useRouter();\n  const {\n    0: columns,\n    1: setColumns\n  } = useState([]);\n  const {\n    0: leads,\n    1: setLeads\n  } = useState([]);\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: current,\n    1: setCurrent\n  } = useState({});\n  const {\n    0: dropDown,\n    1: setDropDown\n  } = useState(\"\");\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: snackBar,\n    1: setSnackbar\n  } = useState(false);\n  const {\n    0: severity,\n    1: setSeverity\n  } = useState(\"info\");\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const {\n    0: nMode,\n    1: setNMode\n  } = useState(true);\n  const {\n    0: photo,\n    1: setPhoto\n  } = useState(\"\");\n  const {\n    0: numLeads,\n    1: setNumLeads\n  } = useState(\"\");\n  const {\n    0: address,\n    1: setAddress\n  } = useState(\"\");\n  const {\n    0: phoneNum,\n    1: setPhoneNum\n  } = useState(\"\");\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(\"\");\n  const {\n    0: company,\n    1: setCompany\n  } = useState(\"\");\n  const {\n    0: comment,\n    1: setComment\n  } = useState(\"\");\n  const {\n    0: contactNum,\n    1: setContactNum\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: interest,\n    1: setInterest\n  } = useState(\"\");\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: quote,\n    1: setQuote\n  } = useState(\"\");\n  const {\n    0: salespersonId,\n    1: setSalespersonId\n  } = useState(\"\");\n  useEffect(() => {\n    setColumns([{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Company',\n      field: 'company'\n    }, {\n      title: 'Assigned to ',\n      field: \"userId\",\n      render: rowData => /*#__PURE__*/_jsxDEV(Userinfo, {\n        uid: rowData.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, // { title: 'Handler', field: 'name'},\n    {\n      title: 'Quote',\n      field: \"quote\",\n      render: rowData => /*#__PURE__*/_jsxDEV(Typography, {\n        children: rowData.quote ? \"RM \" + rowData.quote : \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, {\n      title: 'Interest',\n      field: 'interest'\n    }, {\n      title: 'Result',\n      field: 'result'\n    }, {\n      title: 'Status',\n      field: 'assigned',\n      render: rowData => /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"subtitle2\",\n        style: {\n          color: rowData.assigned ? \"green\" : \"red\"\n        },\n        children: rowData.assigned ? \"ASSIGNED\" : \"NOT ASSIGNED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }]);\n    console.log(auth.currentUser);\n\n    if (userId !== \"\") {\n      // db.collection(\"leads\").where(\"adminID\", \"==\",userId)\n      db.collection(\"leads\").get().then(querySnapshot => {\n        let leadsArr = [];\n        querySnapshot.forEach(function (doc) {\n          let r = doc.data();\n          r.id = doc.id;\n          leadsArr.push(r);\n        });\n        setLeads(leadsArr);\n      });\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(AdminLayout, {\n    setNMode: setNMode,\n    setUserId: setUserId,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-between\",\n      style: {\n        marginTop: 10,\n        marginBottom: 10\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          style: {\n            color: \"grey\",\n            marginTop: 15\n          },\n          children: \"Leads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 11,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            backgroundColor: \"rgba(255, 255, 255, 0)\",\n            marginBottom: 20\n          },\n          variant: \"outlined\",\n          children: leads.length !== 0 && /*#__PURE__*/_jsxDEV(MyTable, {\n            title: \"\",\n            columns: columns,\n            data: leads,\n            SColor: nMode ? \"#fff\" : \"grey\" // actions={[\n            //     {\n            //         icon: () => <Edit style={{color:nMode?\"#fff\":\"grey\"}}/>,\n            //         tooltip: 'Edit/View Lead',\n            //         onClick: (event, rowData) => {\n            //             handleEdit(rowData)\n            //         }\n            //     }\n            // ]} \n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/project/ReactJSWEB/pages/history.js"],"names":["React","useEffect","useState","useRouter","AdminLayout","Typography","MyModal","MySnackBar","MyTable","Userinfo","Edit","auth","db","firebase","Grid","Paper","TextField","AcUnitIcon","IconButton","AddIcon","Button","Avatar","History","router","columns","setColumns","leads","setLeads","modal","setModal","current","setCurrent","dropDown","setDropDown","edit","setEdit","snackBar","setSnackbar","severity","setSeverity","message","setMessage","nMode","setNMode","photo","setPhoto","numLeads","setNumLeads","address","setAddress","phoneNum","setPhoneNum","userId","setUserId","company","setCompany","comment","setComment","contactNum","setContactNum","email","setEmail","interest","setInterest","name","setName","quote","setQuote","salespersonId","setSalespersonId","title","field","render","rowData","color","assigned","console","log","currentUser","collection","get","then","querySnapshot","leadsArr","forEach","doc","r","data","id","push","marginTop","marginBottom","backgroundColor","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport AdminLayout from \"../components/AdminLayout\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {MyModal, MySnackBar, MyTable, Userinfo} from \"../helpers/mainHelpers\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport {auth, db,firebase} from \"../helpers/firebase\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Paper, TextField} from \"@material-ui/core\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n\r\n\r\n\r\nexport default function History() {\r\n    const router = useRouter();\r\n    const [columns, setColumns] = useState([]);\r\n    const [leads, setLeads] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [current, setCurrent] = useState({});\r\n    const [dropDown, setDropDown] = useState(\"\");\r\n    const [edit, setEdit] = useState(false);\r\n    const [snackBar, setSnackbar] = useState(false);\r\n    const [severity, setSeverity] = useState(\"info\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [nMode, setNMode] = useState(true);\r\n\r\n    const [photo, setPhoto] = useState(\"\");\r\n\r\n    const [numLeads, setNumLeads] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [phoneNum, setPhoneNum] = useState(\"\");\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    const [company, setCompany] = useState(\"\");\r\n    const [comment, setComment] = useState(\"\");\r\n    const [contactNum, setContactNum] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [interest, setInterest] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const [quote, setQuote] = useState(\"\");\r\n\r\n\r\n    const [salespersonId, setSalespersonId] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n    \r\n        setColumns([\r\n            { title: 'Name', field: 'name' },\r\n            { title: 'Company', field: 'company'},\r\n            { title: 'Assigned to ', field: \"userId\",\r\n            render: rowData => (\r\n                <Userinfo uid={rowData.userId}></Userinfo>\r\n            ),\r\n        },\r\n            // { title: 'Handler', field: 'name'},\r\n            { title: 'Quote', field:\"quote\",\r\n            render: rowData => (\r\n                <Typography >\r\n                    { rowData.quote? \"RM \"+rowData.quote: \"-\"}\r\n                </Typography>\r\n            ),\r\n        },\r\n            { title: 'Interest', field: 'interest' },\r\n            { title: 'Result', field: 'result' },\r\n            { title: 'Status', field: 'assigned',\r\n                render: rowData => (\r\n                    <Typography gutterBottom variant=\"subtitle2\" style={{color: rowData.assigned? \"green\":\"red\"}}>\r\n                        {rowData.assigned? \"ASSIGNED\": \"NOT ASSIGNED\"}\r\n                    </Typography>\r\n                ),\r\n            }\r\n        ])\r\n        console.log(auth.currentUser)\r\n        if(userId!==\"\"){\r\n        // db.collection(\"leads\").where(\"adminID\", \"==\",userId)\r\n        db.collection(\"leads\")\r\n        .get()\r\n        .then((querySnapshot) => {\r\n                let leadsArr = [];\r\n                querySnapshot.forEach(function(doc) {\r\n                    let r = doc.data();\r\n                    r.id = doc.id;\r\n                    leadsArr.push(r);\r\n                });\r\n                setLeads(leadsArr);\r\n            });\r\n        }\r\n    },[userId])\r\n\r\n   \r\n\r\n    return (\r\n        <AdminLayout setNMode={setNMode} setUserId={setUserId}>\r\n            <Grid container justify={\"space-between\"} style={{marginTop:10, marginBottom:10}}>\r\n                <Grid item xs={10}>\r\n                    <Typography variant=\"h5\" gutterBottom style={{color: \"grey\", marginTop: 15}}>\r\n                        Leads\r\n                    </Typography>\r\n                </Grid>\r\n                {/* <Grid item xs={2} style={{justifyItems:\"flex-end\", justifyContent:\"flex-end\"}}>\r\n                    <IconButton onClick={openEditor} style={{marginTop: 8, backgroundColor:\"#f50057\", color:\"#fff\", borderRadius:5, marginLeft:40}}>\r\n                        <AddIcon />\r\n                    </IconButton>\r\n                </Grid> */}\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item xs={11}>\r\n                    <Paper style={{backgroundColor:\"rgba(255, 255, 255, 0)\", marginBottom:20}} variant=\"outlined\" >\r\n                        {leads.length !==0 && <MyTable title=\"\" columns={columns} data={leads} SColor={nMode?\"#fff\":\"grey\"}\r\n                        // actions={[\r\n                        //     {\r\n                        //         icon: () => <Edit style={{color:nMode?\"#fff\":\"grey\"}}/>,\r\n                        //         tooltip: 'Edit/View Lead',\r\n                        //         onClick: (event, rowData) => {\r\n                        //             handleEdit(rowData)\r\n                        //         }\r\n                        //     }\r\n                        // ]} \r\n\r\n\r\n                        />}\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n           \r\n           \r\n\r\n        </AdminLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}