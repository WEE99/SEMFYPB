{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\project\\\\ReactJSWEB\\\\pages\\\\requests.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport AdminLayout from \"../components/AdminLayout\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { MyModal, MySnackBar, MyTable, pinkM } from \"../helpers/mainHelpers\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport { auth, db, firebase } from \"../helpers/firebase\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Paper, TextField } from \"@material-ui/core\";\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nexport default function Requests() {\n  const router = useRouter();\n  const {\n    0: columns,\n    1: setColumns\n  } = useState([]);\n  const {\n    0: reqs,\n    1: setReqs\n  } = useState([]);\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n  const {\n    0: current,\n    1: setCurrent\n  } = useState({});\n  const {\n    0: dropDown,\n    1: setDropDown\n  } = useState(\"\");\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: snackBar,\n    1: setSnackbar\n  } = useState(false);\n  const {\n    0: severity,\n    1: setSeverity\n  } = useState(\"info\");\n  const {\n    0: message,\n    1: setMessage\n  } = useState(\"\");\n  const {\n    0: nMode,\n    1: setNMode\n  } = useState(true);\n  const {\n    0: photo,\n    1: setPhoto\n  } = useState(\"\");\n  const {\n    0: numLeads,\n    1: setNumLeads\n  } = useState(\"\");\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: address,\n    1: setAddress\n  } = useState(\"\");\n  const {\n    0: phoneNum,\n    1: setPhoneNum\n  } = useState(\"\");\n  const {\n    0: userId,\n    1: setUserId\n  } = useState(\"\");\n  const {\n    0: salespersonId,\n    1: setSalespersonId\n  } = useState(\"\");\n  useEffect(() => {\n    console.log(router);\n\n    if (auth.currentUser !== null) {\n      setUserId(auth.currentUser.uid);\n    }\n\n    setColumns([{\n      title: 'UserId',\n      field: 'id'\n    }, {\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Request Type',\n      field: 'type'\n    }, {\n      title: 'Date Submitted',\n      field: 'date'\n    }, {\n      title: 'Status',\n      field: 'status',\n      render: rowData => /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"subtitle2\",\n        style: {\n          color: rowData.status === \"pending\" ? \"gold\" : \"green\"\n        },\n        children: rowData.status.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }]);\n    db.collection(\"requests\").onSnapshot(function (querySnapshot) {\n      let reqArr = [];\n      querySnapshot.forEach(function (doc) {\n        let r = doc.data();\n        r.id = doc.id;\n        r.date = r.dateSubmitted.toDate().toDateString();\n        reqArr.push(r);\n      });\n      setReqs(reqArr);\n    });\n  }, []);\n\n  const openEditor = () => {\n    setPhoto(\"\");\n    setEmail(\"\");\n    setPhoneNum(\"\");\n    setAddress(\"\");\n    setEdit(false);\n    setModal(true);\n  };\n\n  const handleEdit = rowData => {\n    setCurrent(rowData);\n\n    if (rowData.userId !== undefined) {\n      setSalespersonId(rowData.userId);\n    } else {\n      setSalespersonId(\"\");\n    }\n\n    setEdit(true);\n    setModal(true);\n  };\n\n  const handleUpdate = () => {};\n\n  const handleRequest = () => {};\n\n  return /*#__PURE__*/_jsxDEV(AdminLayout, {\n    setNMode: setNMode,\n    setUserId: setUserId,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justify: \"space-between\",\n      style: {\n        marginTop: 10,\n        marginBottom: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          style: {\n            color: \"grey\",\n            marginTop: 15\n          },\n          children: \"Requests\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        style: {\n          justifyItems: \"flex-end\",\n          justifyContent: \"flex-end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: openEditor,\n          style: {\n            marginTop: 8,\n            backgroundColor: \"#f50057\",\n            color: \"#fff\",\n            borderRadius: 5,\n            marginLeft: 40\n          },\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 11,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            backgroundColor: \"rgba(255, 255, 255, 0)\",\n            marginBottom: 20\n          },\n          variant: \"outlined\",\n          children: reqs.length !== 0 && /*#__PURE__*/_jsxDEV(MyTable, {\n            title: \"\",\n            columns: columns,\n            data: reqs,\n            SColor: nMode ? \"#fff\" : \"grey\",\n            actions: [{\n              icon: () => /*#__PURE__*/_jsxDEV(Edit, {\n                style: {\n                  color: nMode ? \"#fff\" : \"grey\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 45\n              }, this),\n              tooltip: 'Edit/View Lead',\n              onClick: (event, rowData) => {\n                handleEdit(rowData);\n              }\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      handleClose: () => {\n        setModal(false);\n      },\n      open: modal,\n      title: edit ? \"Assign Leads\" : \"Request New Leads\",\n      clr: nMode ? \"#1b1c21\" : \"#fff\",\n      clrB: nMode ? \"#fff\" : \"darkgrey\",\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        outline: 'none'\n      },\n      children: edit ? /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          maxWidth: 400,\n          margin: \"auto\",\n          borderWidth: 0,\n          backgroundColor: \"rgba(255, 255, 255, 0)\"\n        },\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          gutterBottom: true,\n          style: {\n            color: \"grey\",\n            marginTop: 15\n          },\n          children: salespersonId === \"\" ? \"Please enter userId of salesperson you want to assign this lead to.\" : \"This lead has already been assigned to a user.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          label: \"User Id\",\n          variant: \"filled\",\n          fullWidth: true,\n          value: salespersonId,\n          disabled: salespersonId !== \"\",\n          style: {\n            marginBottom: 10,\n            backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n            borderRadius: 5\n          },\n          onChange: e => {\n            setSalespersonId(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), salespersonId === \"\" && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          onClick: handleUpdate,\n          children: \"Assign Lead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          maxWidth: 400,\n          margin: \"auto\",\n          borderWidth: 0,\n          backgroundColor: \"rgba(255, 255, 255, 0)\"\n        },\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          label: \"Number of Leads\",\n          variant: \"filled\",\n          type: \"number\",\n          fullWidth: true,\n          value: numLeads,\n          style: {\n            marginBottom: 10,\n            backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n            borderRadius: 5\n          },\n          onChange: e => {\n            setNumLeads(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          onClick: handleRequest,\n          children: \"Send Request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySnackBar, {\n      open: snackBar,\n      handleClose: () => setSnackbar(false),\n      severity: severity,\n      msg: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["D:/project/ReactJSWEB/pages/requests.js"],"names":["React","useEffect","useState","useRouter","AdminLayout","Typography","MyModal","MySnackBar","MyTable","pinkM","Edit","auth","db","firebase","Grid","Paper","TextField","AcUnitIcon","IconButton","AddIcon","Button","Avatar","Requests","router","columns","setColumns","reqs","setReqs","modal","setModal","current","setCurrent","dropDown","setDropDown","edit","setEdit","snackBar","setSnackbar","severity","setSeverity","message","setMessage","nMode","setNMode","photo","setPhoto","numLeads","setNumLeads","email","setEmail","address","setAddress","phoneNum","setPhoneNum","userId","setUserId","salespersonId","setSalespersonId","console","log","currentUser","uid","title","field","render","rowData","color","status","toUpperCase","collection","onSnapshot","querySnapshot","reqArr","forEach","doc","r","data","id","date","dateSubmitted","toDate","toDateString","push","openEditor","handleEdit","undefined","handleUpdate","handleRequest","marginTop","marginBottom","justifyItems","justifyContent","backgroundColor","borderRadius","marginLeft","length","icon","tooltip","onClick","event","display","alignItems","outline","maxWidth","margin","borderWidth","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport AdminLayout from \"../components/AdminLayout\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {MyModal, MySnackBar, MyTable, pinkM} from \"../helpers/mainHelpers\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport {auth, db,firebase} from \"../helpers/firebase\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Paper, TextField} from \"@material-ui/core\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\n\r\n\r\n\r\nexport default function Requests() {\r\n    const router = useRouter();\r\n    const [columns, setColumns] = useState([]);\r\n    const [reqs, setReqs] = useState([]);\r\n    const [modal, setModal] = useState(false);\r\n    const [current, setCurrent] = useState({});\r\n    const [dropDown, setDropDown] = useState(\"\");\r\n    const [edit, setEdit] = useState(false);\r\n    const [snackBar, setSnackbar] = useState(false);\r\n    const [severity, setSeverity] = useState(\"info\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [nMode, setNMode] = useState(true);\r\n\r\n    const [photo, setPhoto] = useState(\"\");\r\n\r\n    const [numLeads, setNumLeads] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [phoneNum, setPhoneNum] = useState(\"\");\r\n    const [userId, setUserId] = useState(\"\");\r\n\r\n    const [salespersonId, setSalespersonId] = useState(\"\");\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(router);\r\n        if(auth.currentUser !== null){\r\n            setUserId(auth.currentUser.uid);\r\n        }\r\n        setColumns([\r\n            { title: 'UserId', field: 'id' },\r\n            { title: 'Name', field: 'name' },\r\n            { title: 'Request Type', field: 'type' },\r\n            { title: 'Date Submitted', field: 'date' },\r\n            { title: 'Status', field: 'status',\r\n                render: rowData => (\r\n                    <Typography gutterBottom variant=\"subtitle2\" style={{color: rowData.status===\"pending\"? \"gold\":\"green\"}}>\r\n                        {rowData.status.toUpperCase()}\r\n                    </Typography>\r\n                ),\r\n            }\r\n        ])\r\n\r\n        db.collection(\"requests\")\r\n            .onSnapshot(function(querySnapshot) {\r\n                let reqArr = [];\r\n                querySnapshot.forEach(function(doc) {\r\n                    let r = doc.data();\r\n                    r.id = doc.id;\r\n                    r.date = r.dateSubmitted.toDate().toDateString();\r\n                    reqArr.push(r);\r\n                });\r\n                setReqs(reqArr);\r\n            });\r\n\r\n    },[])\r\n\r\n    const openEditor = () => {\r\n        setPhoto(\"\");\r\n        setEmail(\"\");\r\n        setPhoneNum(\"\");\r\n        setAddress(\"\");\r\n        setEdit(false);\r\n        setModal(true);\r\n    }\r\n\r\n    const handleEdit = (rowData) => {\r\n        setCurrent(rowData);\r\n        if(rowData.userId !== undefined){\r\n            setSalespersonId(rowData.userId);\r\n        }else{\r\n            setSalespersonId(\"\");\r\n        }\r\n\r\n        setEdit(true);\r\n        setModal(true);\r\n    }\r\n\r\n    const handleUpdate = ()=> {\r\n    }\r\n\r\n    const handleRequest = ()=>{\r\n    }\r\n\r\n    return (\r\n        <AdminLayout setNMode={setNMode} setUserId={setUserId}>\r\n            <Grid container justify={\"space-between\"} style={{marginTop:10, marginBottom:10}}>\r\n                <Grid item xs={10}>\r\n                    <Typography variant=\"h5\" gutterBottom style={{color: \"grey\", marginTop: 15}}>\r\n                        Requests\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={2} style={{justifyItems:\"flex-end\", justifyContent:\"flex-end\"}}>\r\n                    <IconButton onClick={openEditor} style={{marginTop: 8, backgroundColor:\"#f50057\", color:\"#fff\", borderRadius:5, marginLeft:40}}>\r\n                        <AddIcon />\r\n                    </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container>\r\n                <Grid item xs={11}>\r\n                    <Paper style={{backgroundColor:\"rgba(255, 255, 255, 0)\", marginBottom:20}} variant=\"outlined\" >\r\n                        {reqs.length !==0 && <MyTable title=\"\" columns={columns} data={reqs} SColor={nMode?\"#fff\":\"grey\"} actions={[\r\n                            {\r\n                                icon: () => <Edit style={{color:nMode?\"#fff\":\"grey\"}}/>,\r\n                                tooltip: 'Edit/View Lead',\r\n                                onClick: (event, rowData) => {\r\n                                    handleEdit(rowData)\r\n                                }\r\n                            }\r\n                        ]}/>}\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n            <MyModal handleClose={() => {setModal(false)}} open={modal} title={edit?\"Assign Leads\":\"Request New Leads\"} clr={nMode? \"#1b1c21\":\"#fff\"} clrB={nMode? \"#fff\":\"darkgrey\"} style={{\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                outline: 'none'}}>\r\n                {edit?<Paper\r\n                        style={{maxWidth: 400, margin: \"auto\", borderWidth: 0, backgroundColor: \"rgba(255, 255, 255, 0)\"}}\r\n                        variant=\"outlined\">\r\n\r\n                        <Typography variant=\"body2\" gutterBottom style={{color: \"grey\", marginTop: 15}}>\r\n                            {salespersonId===\"\"?\"Please enter userId of salesperson you want to assign this lead to.\":\r\n                                \"This lead has already been assigned to a user.\"}\r\n                        </Typography>\r\n                        <TextField\r\n                            required\r\n                            label=\"User Id\"\r\n                            variant=\"filled\"\r\n                            fullWidth\r\n                            value={salespersonId}\r\n                            disabled={salespersonId!==\"\"}\r\n                            style={{marginBottom: 10, backgroundColor: \"rgba(255, 255, 255, 0.1)\", borderRadius: 5}}\r\n                            onChange={(e) => {\r\n                                setSalespersonId(e.target.value)\r\n                            }}\r\n                        />\r\n                        {salespersonId===\"\"&&<Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleUpdate}>\r\n                            Assign Lead\r\n                        </Button>}\r\n                    </Paper>:\r\n                    <Paper style={{maxWidth:400, margin:\"auto\", borderWidth:0, backgroundColor:\"rgba(255, 255, 255, 0)\"}} variant=\"outlined\">\r\n                        <TextField\r\n                            required\r\n                            label=\"Number of Leads\"\r\n                            variant=\"filled\"\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            value={numLeads}\r\n                            style={{marginBottom:10, backgroundColor:\"rgba(255, 255, 255, 0.1)\", borderRadius:5}}\r\n                            onChange={(e) => {setNumLeads(e.target.value)}}\r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" fullWidth onClick={handleRequest}>\r\n                            Send Request\r\n                        </Button>\r\n                    </Paper>}\r\n            </MyModal>\r\n            <MySnackBar open={snackBar} handleClose={() => setSnackbar(false)} severity={severity} msg={message}/>\r\n\r\n        </AdminLayout>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}