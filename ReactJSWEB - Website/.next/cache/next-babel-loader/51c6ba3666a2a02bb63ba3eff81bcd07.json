{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\project\\\\ReactJSWEB\\\\helpers\\\\myChart.js\",\n    _this = this;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, LineSeries, Title, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\nimport { curveCatmullRom, line } from 'd3-shape';\nimport { scalePoint } from 'd3-scale'; // import { energyConsumption as data } from '../../../demo-data/data-vizualization';\n\nvar Line = function Line(props) {\n  return /*#__PURE__*/_jsxDEV(LineSeries.Path, _objectSpread(_objectSpread({}, props), {}, {\n    path: line().x(function (_ref) {\n      var arg = _ref.arg;\n      return arg;\n    }).y(function (_ref2) {\n      var val = _ref2.val;\n      return val;\n    }).curve(curveCatmullRom)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Line;\nvar titleStyles = {\n  title: {\n    textAlign: 'center',\n    width: '100%',\n    marginBottom: '10px'\n  }\n};\nvar Text = withStyles(titleStyles)(function (props) {\n  var text = props.text,\n      classes = props.classes;\n\n  var _text$split = text.split('\\\\n'),\n      _text$split2 = _slicedToArray(_text$split, 2),\n      mainText = _text$split2[0],\n      subText = _text$split2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.title,\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h3\",\n      variant: \"h5\",\n      children: \"Leads for the past 7 days\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, _this);\n});\n\nvar legendStyles = function legendStyles() {\n  return {\n    root: {\n      display: 'flex',\n      margin: 'auto',\n      flexDirection: 'row'\n    }\n  };\n};\n\nvar legendLabelStyles = function legendLabelStyles(theme) {\n  return {\n    label: {\n      marginBottom: theme.spacing(1),\n      whiteSpace: 'nowrap'\n    }\n  };\n};\n\nvar legendItemStyles = function legendItemStyles() {\n  return {\n    item: {\n      flexDirection: 'column-reverse'\n    }\n  };\n};\n\nvar legendRootBase = function legendRootBase(_ref3) {\n  var classes = _ref3.classes,\n      restProps = _objectWithoutProperties(_ref3, [\"classes\"]);\n\n  return /*#__PURE__*/_jsxDEV(Legend.Root, _objectSpread(_objectSpread({}, restProps), {}, {\n    className: classes.root\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, _this);\n};\n\nvar legendLabelBase = function legendLabelBase(_ref4) {\n  var classes = _ref4.classes,\n      restProps = _objectWithoutProperties(_ref4, [\"classes\"]);\n\n  return /*#__PURE__*/_jsxDEV(Legend.Label, _objectSpread({\n    className: classes.label\n  }, restProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, _this);\n};\n\nvar legendItemBase = function legendItemBase(_ref5) {\n  var classes = _ref5.classes,\n      restProps = _objectWithoutProperties(_ref5, [\"classes\"]);\n\n  return /*#__PURE__*/_jsxDEV(Legend.Item, _objectSpread({\n    className: classes.item\n  }, restProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, _this);\n};\n\nvar Root = withStyles(legendStyles, {\n  name: 'LegendRoot'\n})(legendRootBase);\nvar Label = withStyles(legendLabelStyles, {\n  name: 'LegendLabel'\n})(legendLabelBase);\nvar Item = withStyles(legendItemStyles, {\n  name: 'LegendItem'\n})(legendItemBase);\n\nvar demoStyles = function demoStyles() {\n  return {\n    chart: {\n      paddingRight: '30px'\n    }\n  };\n};\n\nvar MyChart = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MyChart, _React$PureComponent);\n\n  var _super = _createSuper(MyChart);\n\n  function MyChart(props) {\n    var _this2;\n\n    _classCallCheck(this, MyChart);\n\n    _this2 = _super.call(this, props);\n    console.log(props.data);\n    _this2.state = {\n      data: props.data\n    };\n    return _this2;\n  }\n\n  _createClass(MyChart, [{\n    key: \"render\",\n    value: function render() {\n      // const { data: chartData } = this.state;\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          chartData = _this$props.data,\n          clr = _this$props.clr;\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          backgroundColor: \"rgba(255, 255, 255, 0)\",\n          color: clr\n        },\n        children: /*#__PURE__*/_jsxDEV(Chart, {\n          data: chartData,\n          className: classes.chart,\n          children: [/*#__PURE__*/_jsxDEV(ArgumentScale, {\n            factory: scalePoint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ArgumentAxis, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Label, {\n              staggeringSpacing: 10,\n              displayMode: \"stagger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n            name: \"Wins\",\n            valueField: \"wins\",\n            argumentField: \"date\",\n            seriesComponent: Line\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n            name: \"Loss\",\n            valueField: \"loss\",\n            argumentField: \"date\",\n            seriesComponent: Line\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n            name: \"New\",\n            valueField: \"new\",\n            argumentField: \"date\",\n            seriesComponent: Line\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            position: \"bottom\",\n            rootComponent: Root,\n            itemComponent: Item,\n            labelComponent: Label,\n            color: \"#fff\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Title, {\n            text: \"Leads in the last 7 days\",\n            textComponent: Text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return MyChart;\n}(React.PureComponent);\n\nexport default withStyles(demoStyles, {\n  name: 'Demo'\n})(MyChart);\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["D:/project/ReactJSWEB/helpers/myChart.js"],"names":["React","Paper","Chart","ArgumentAxis","ValueAxis","LineSeries","Title","Legend","withStyles","Typography","ArgumentScale","Animation","curveCatmullRom","line","scalePoint","Line","props","x","arg","y","val","curve","titleStyles","title","textAlign","width","marginBottom","Text","text","classes","split","mainText","subText","legendStyles","root","display","margin","flexDirection","legendLabelStyles","theme","label","spacing","whiteSpace","legendItemStyles","item","legendRootBase","restProps","legendLabelBase","legendItemBase","Root","name","Label","Item","demoStyles","chart","paddingRight","MyChart","console","log","data","state","chartData","clr","backgroundColor","color","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    LineSeries,\r\n    Title,\r\n    Legend,\r\n} from '@devexpress/dx-react-chart-material-ui';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ArgumentScale, Animation } from '@devexpress/dx-react-chart';\r\nimport {\r\n    curveCatmullRom,\r\n    line,\r\n} from 'd3-shape';\r\nimport { scalePoint } from 'd3-scale';\r\n\r\n// import { energyConsumption as data } from '../../../demo-data/data-vizualization';\r\n\r\nconst Line = props => (\r\n    <LineSeries.Path\r\n        {...props}\r\n        path={line()\r\n            .x(({ arg }) => arg)\r\n            .y(({ val }) => val)\r\n            .curve(curveCatmullRom)}\r\n    />\r\n);\r\n\r\nconst titleStyles = {\r\n    title: {\r\n        textAlign: 'center',\r\n        width: '100%',\r\n        marginBottom: '10px',\r\n    },\r\n};\r\nconst Text = withStyles(titleStyles)((props) => {\r\n    const { text, classes } = props;\r\n    const [mainText, subText] = text.split('\\\\n');\r\n    return (\r\n        <div className={classes.title}>\r\n            <Typography component=\"h3\" variant=\"h5\">\r\n                Leads for the past 7 days\r\n            </Typography>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst legendStyles = () => ({\r\n    root: {\r\n        display: 'flex',\r\n        margin: 'auto',\r\n        flexDirection: 'row',\r\n    },\r\n});\r\nconst legendLabelStyles = theme => ({\r\n    label: {\r\n        marginBottom: theme.spacing(1),\r\n        whiteSpace: 'nowrap',\r\n    },\r\n});\r\nconst legendItemStyles = () => ({\r\n    item: {\r\n        flexDirection: 'column-reverse',\r\n    },\r\n});\r\n\r\nconst legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n);\r\nconst legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n);\r\nconst legendItemBase = ({ classes, ...restProps }) => (\r\n    <Legend.Item className={classes.item} {...restProps} />\r\n);\r\nconst Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\nconst Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\nconst Item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\r\nconst demoStyles = () => ({\r\n    chart: {\r\n        paddingRight: '30px',\r\n    },\r\n});\r\n\r\nclass MyChart extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props.data);\r\n\r\n        this.state = {\r\n            data: props.data,\r\n        };\r\n    }\r\n\r\n    render() {\r\n        // const { data: chartData } = this.state;\r\n        const { classes, data: chartData ,clr } = this.props;\r\n\r\n        return (\r\n            <Paper\r\n                style={{backgroundColor:\"rgba(255, 255, 255, 0)\", color:clr}}>\r\n                <Chart\r\n                    data={chartData}\r\n                    className={classes.chart}\r\n                >\r\n                    <ArgumentScale factory={scalePoint}/>\r\n                    {/*<ArgumentAxis color={\"#fff\"}/>*/}\r\n                    <ArgumentAxis> {/* or ValueAxis, or CommonAxisSettings */}\r\n                        <Label\r\n                            staggeringSpacing={10}\r\n                            displayMode=\"stagger\"\r\n                        />\r\n                    </ArgumentAxis>\r\n                    <ValueAxis />\r\n\r\n                    <LineSeries\r\n                        name=\"Wins\"\r\n                        valueField=\"wins\"\r\n                        argumentField=\"date\"\r\n                        seriesComponent={Line}\r\n\r\n                    />\r\n                    <LineSeries\r\n                        name=\"Loss\"\r\n                        valueField=\"loss\"\r\n                        argumentField=\"date\"\r\n                        seriesComponent={Line}\r\n                    />\r\n                    <LineSeries\r\n                        name=\"New\"\r\n                        valueField=\"new\"\r\n                        argumentField=\"date\"\r\n                        seriesComponent={Line}\r\n                    />\r\n                    <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} color={\"#fff\"}/>\r\n                    <Title\r\n                        text=\"Leads in the last 7 days\"\r\n                        textComponent={Text}\r\n                    />\r\n                    <Animation />\r\n                </Chart>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(demoStyles, { name: 'Demo' })(MyChart);\r\n"]},"metadata":{},"sourceType":"module"}